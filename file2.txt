import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';

@Injectable({
  providedIn: 'root'
})
export class AuthService {
private _url="http://localhost:4090/api/"
  constructor(private http:HttpClient,private _router:Router) { }

  signUp(data){
   return this.http.post<any>(this._url+"register",data)
  }
login(data){
  return this.http.post<any>(this._url+"login",data)
}

logedIn(){
  return !!localStorage.getItem('token');
}

logedOutUser(){
  this.removeStorage();
  this._router.navigate(['/home']);
  return localStorage.removeItem('token');
  }
removeStorage(){
 localStorage.removeItem('token');
 sessionStorage.removeItem('id');
 sessionStorage.removeItem('user')
} 
getRole(){
  return localStorage.getItem('role');
}

getToken(){
  return localStorage.getItem('token');
}

}


import { Injectable } from '@angular/core';
import { CanActivate,Router  } from '@angular/router';
import { AuthService } from './services/auth.service';

@Injectable({
  providedIn: 'root'
})
export class AuthGuard implements CanActivate {
  constructor(private auth:AuthService,private _router:Router) { }
  canActivate():boolean  {
    if(this.auth.logedIn()){
     return true;
    }else{
      this._router.navigate(['/login']);
      return false;
    }
  }
}





import { Injectable } from '@angular/core';
import { CanActivate,Router } from '@angular/router';
import { AuthService } from './services/auth.service';

@Injectable({
  providedIn: 'root'
})
export class AdminGuard implements CanActivate {
  constructor(private auth:AuthService,private _router:Router){}
  canActivate():boolean {
    if(this.auth.logedIn()&& this.auth.getRole()){
    return true;
    }else{
      this._router.navigate([''])
      return false;
    }

  }
}


import { Injectable } from '@angular/core';
import { CanActivate,Router } from '@angular/router';
import { AuthService } from './services/auth.service';

@Injectable({
  providedIn: 'root'
})
export class AdminGuard implements CanActivate {
  constructor(private auth:AuthService,private _router:Router){}
  canActivate():boolean {
    if(this.auth.logedIn()&& this.auth.getRole()){
    return true;
    }else{
      this._router.navigate([''])
      return false;
    }

  }
}



import { Component, OnInit } from '@angular/core';
import { AuthService } from '../../services/auth.service';
import { Router } from '@angular/router';
@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  public userResponse:any;
  logindata={
  email:'',
  password:''
}
error:any;
  constructor(private _auth:AuthService,private _router:Router) { }

  ngOnInit() {
  }
login(data){
  this._auth.login(data).subscribe(
    res=>{
      // console.log(res);
      localStorage.setItem('token',res.token);
      sessionStorage.setItem('user',res.user);
      sessionStorage.setItem('id',res.id);
      sessionStorage.setItem('role',res.role);
      this._router.navigate(['home']);
    },
    err => {
      // console.log(err);
      this.error = err.error.message;
    }
  )}
}




<div class="container">
  <section class="col-xs-12"> 
      <div class="col-xs-5 login-section">
        <h1 class="login-heading">LOGIN</h1>
        <P class="login-paragraph">Enter your Email Id & password</P>
        <div  *ngIf="error" class="form-group input-group ">
          <span class="form-control err" >{{error}}</span>
        </div>
        <form #regForm='ngForm'>
        <div class="form-group">
          <input type="email" [(ngModel)]="logindata.email" class="form-control"  pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}$" placeholder="EMAIL" id="name" name="email" #email="ngModel" required>
        </div>
        <div [hidden]="email.dirty || email.untouched" class="error">please fill this field</div>
        <div *ngIf=logindata.email [hidden]="email.untouched || email.valid " class="error">Please enter a valid email </div>

        <div class="form-group">
          <input type="password" [(ngModel)]="logindata.password" class="form-control"  placeholder="PASSWORD" name="password" minlength="8" #password="ngModel" id="PassWord" required>
        </div>
        <div [hidden]="(password.dirty || password.untouched || password.invalid)" class="error">password is required
        </div>
        <div [hidden]="password.valid || password.untouched " class="error">Password must be more than 8 characters</div>
        <div class="col-xs-6">
          <input type="checkbox" id="checkBox"> 
          <label for="checkBox">Remeber me</label>
        </div>
        <div class="col-xs-6 text-right passwordSetting">
          <a routerLink="/forgotpassword">Forgot password?</a>
        </div>
       <div class="text-right">
          <button type="submit" [disabled]="!regForm.form.valid" (click)="login(logindata)" class="btn btn-primary btn-lg setting-loginButton">LOGIN</button>
       </div>
       </form>
       <div class="text-center">
         <p class="singupAccountSetting">
           Don't have an account?&nbsp;
           <a routerLink="/register">Signup</a>
         </p>
       </div>
       
      </div>
      
      </section>
    
    </div>

